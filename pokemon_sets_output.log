2025-06-02 19:17:27,759 | __main__ | INFO | Discovering plugins...
2025-06-02 19:17:27,845 | core.plugin_loader | DEBUG | Loaded module: plugins.tcgplayer.fetchers
2025-06-02 19:17:27,845 | core.plugin_loader | DEBUG | Registered transform: tcgplayer.PokemonSetsCsvFetcher
2025-06-02 19:17:27,845 | core.plugin_loader | DEBUG | Registered transform: tcgplayer.TcgPlayerPriceHistoryFetcher
2025-06-02 19:17:27,847 | core.plugin_loader | DEBUG | Loaded module: plugins.tcgplayer.parsers
2025-06-02 19:17:27,847 | core.plugin_loader | DEBUG | Registered transform: tcgplayer.PokemonSetsParser
2025-06-02 19:17:27,847 | core.plugin_loader | DEBUG | Registered transform: tcgplayer.PriceHistoryParser
2025-06-02 19:17:27,850 | core.plugin_loader | DEBUG | Loaded module: plugins.tcgplayer.sinks
2025-06-02 19:17:27,850 | core.plugin_loader | DEBUG | Registered transform: tcgplayer.TcgDatabaseSink
2025-06-02 19:17:27,850 | core.plugin_loader | DEBUG | Loaded module: plugins.fi_shortinterest.diff_parser
2025-06-02 19:17:27,850 | core.plugin_loader | DEBUG | Registered transform: fi_shortinterest.DiffParser
2025-06-02 19:17:28,105 | core.plugin_loader | DEBUG | Loaded module: plugins.fi_shortinterest.parser
2025-06-02 19:17:28,105 | core.plugin_loader | DEBUG | Registered transform: fi_shortinterest.FiActParser
2025-06-02 19:17:28,105 | core.plugin_loader | DEBUG | Registered transform: fi_shortinterest.FiAggParser
2025-06-02 19:17:28,106 | core.plugin_loader | DEBUG | Loaded module: plugins.fi_shortinterest.sinks
2025-06-02 19:17:28,106 | core.plugin_loader | DEBUG | Registered transform: fi_shortinterest.DatabaseSink
2025-06-02 19:17:28,157 | core.plugin_loader | DEBUG | Loaded module: plugins.fi_shortinterest.fetcher
2025-06-02 19:17:28,157 | core.plugin_loader | DEBUG | Registered transform: fi_shortinterest.FiFetcher
2025-06-02 19:17:28,157 | core.plugin_loader | INFO | Plugin discovery complete: 7 modules, 10 transforms
2025-06-02 19:17:28,158 | __main__ | INFO | Running pipeline: tcgplayer_pokemon_sets
2025-06-02 19:17:28,158 | core.pipeline_orchestrator | INFO | Starting pipeline: tcgplayer_pokemon_sets
2025-06-02 19:17:28,158 | aiosqlite | DEBUG | executing <function connect.<locals>.connector at 0x101ecb4c0>
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | operation <function connect.<locals>.connector at 0x101ecb4c0> completed
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | executing functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, 'PRAGMA journal_mode=WAL;', [])
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | operation functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, 'PRAGMA journal_mode=WAL;', []) completed
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | executing functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, 'PRAGMA busy_timeout=30000;', [])
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | operation functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, 'PRAGMA busy_timeout=30000;', []) completed
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | executing functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, '\n            CREATE TABLE IF NOT EXISTS migrations (\n                version INTEGER PRIMARY KEY,\n                applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n            )\n        ', [])
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | operation functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, '\n            CREATE TABLE IF NOT EXISTS migrations (\n                version INTEGER PRIMARY KEY,\n                applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n            )\n        ', []) completed
2025-06-02 19:17:28,159 | aiosqlite | DEBUG | executing functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, 'SELECT MAX(version) FROM migrations', [])
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | operation functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, 'SELECT MAX(version) FROM migrations', []) completed
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | executing functools.partial(<built-in method fetchone of sqlite3.Cursor object at 0x101ee82c0>)
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | operation functools.partial(<built-in method fetchone of sqlite3.Cursor object at 0x101ee82c0>) completed
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x105292c50>)
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x105292c50>) completed
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | executing functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, '\n                    CREATE TABLE IF NOT EXISTS pokemon_sets (\n                        id INTEGER PRIMARY KEY AUTOINCREMENT,\n                        set_name TEXT NOT NULL UNIQUE,\n                        release_date TEXT,\n                        booster_product_id INTEGER,\n                        booster_box_product_id INTEGER,\n                        group_id INTEGER,\n                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n                    )\n                ', ())
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | operation functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, '\n                    CREATE TABLE IF NOT EXISTS pokemon_sets (\n                        id INTEGER PRIMARY KEY AUTOINCREMENT,\n                        set_name TEXT NOT NULL UNIQUE,\n                        release_date TEXT,\n                        booster_product_id INTEGER,\n                        booster_box_product_id INTEGER,\n                        group_id INTEGER,\n                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n                    )\n                ', ()) completed
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | executing functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, '\n                    CREATE TABLE IF NOT EXISTS price_history (\n                        id INTEGER PRIMARY KEY AUTOINCREMENT,\n                        product_id INTEGER NOT NULL,\n                        sku_id TEXT NOT NULL,\n                        variant TEXT,\n                        language TEXT,\n                        condition TEXT,\n                        market_price DECIMAL(10,2),\n                        quantity_sold INTEGER,\n                        low_sale_price DECIMAL(10,2),\n                        high_sale_price DECIMAL(10,2),\n                        bucket_start_date DATE NOT NULL,\n                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                        UNIQUE(sku_id, bucket_start_date)\n                    )\n                ', ())
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | operation functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, '\n                    CREATE TABLE IF NOT EXISTS price_history (\n                        id INTEGER PRIMARY KEY AUTOINCREMENT,\n                        product_id INTEGER NOT NULL,\n                        sku_id TEXT NOT NULL,\n                        variant TEXT,\n                        language TEXT,\n                        condition TEXT,\n                        market_price DECIMAL(10,2),\n                        quantity_sold INTEGER,\n                        low_sale_price DECIMAL(10,2),\n                        high_sale_price DECIMAL(10,2),\n                        bucket_start_date DATE NOT NULL,\n                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                        UNIQUE(sku_id, bucket_start_date)\n                    )\n                ', ()) completed
2025-06-02 19:17:28,160 | aiosqlite | DEBUG | executing functools.partial(<built-in method execute of sqlite3.Connection object at 0x105292c50>, '\n            INSERT INTO pokemon_sets (set_name, release_date, booster_product_id, booster_box_product_id, group_id, updated_at)\n            VALUES (?, ?, ?, ?, ?, ?)\n            ON CONFLICT(set_name) DO UPDATE SET release_date = excluded.release_date, booster_product_id = excluded.booster_product_id, booster_box_product_id = excluded.booster_box_product_id, group_id = excluded.group_id, updated_at = excluded.updated_at\n        ', ('SV: Paradox Rift', 'November 3, 2023', 512822, 512821, 23286, '2025-06-02T17:17:28.160789'))
